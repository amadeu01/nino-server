swagger: '2.0'
info:
  title: Nino API
  description: Manage students and schools with this API
  version: "1.0.0"
# the domain of the service
host: localhost:3000
# array of all schemes that your API supports
schemes:
  # - https
  - http
# will be prefixed to all paths
basePath: /
produces:
  - application/json
paths:
  /rooms/schools/{school_id}:
    get:
      summary: Classroom Type
      description: Read all rooms for a school
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
      tags:
        - Rooms
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/room'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    post:
      summary: Classroom Type
      description: Create a new room for a school
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
        - name: room_name
          in: body
          required: true
          schema: 
            type: string
      tags:
        - Rooms
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /rooms/{room_id}:
    put:
      summary: Classroom Type
      description: Update room information (name)
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
        - name: room_name
          in: body
          required: true
          schema:
            type: string
      tags:
        - Rooms
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: Classroom Type
      description: Delete a room
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
      tags:
        - Rooms
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /rooms/{room_id}/educators/{educator_id}:
    post:
      summary: Classroom Type
      description: Add an educator to a room
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
        - name: educator_id
          in: path
          required: true
          type: number
      tags:
        - Rooms
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: Classroom Type
      description: Remove an educator from a room
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
        - name: educator_id
          in: path
          required: true
          type: number
      tags:
        - Rooms
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /rooms/{room_id}/students/{student_id}:
    post:
      summary: Classroom Type
      description: Add a student to a room
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
        - name: student_id
          in: path
          required: true
          type: number
      tags:
        - Rooms
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: Classroom Type
      description: Remove a student from a room
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
        - name: student_id
          in: path
          required: true
          type: number
      tags:
        - Rooms
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /rooms/educators/{educator_id}:
    get:
      summary: Classroom Type
      description: Read rooms for an educator
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: educator_id
          in: path
          required: true
          type: number
      tags:
        - Rooms
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/room'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  
  /classes/schools/{school_id}:
    post:
      summary: Class Type
      description: Create new Class for school
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
        - name: class_name
          in: body
          required: true
          schema:
            type: string
      tags:
        - Classes
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    get:
      summary: Class Type
      description: Read all classes for a School
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
      tags:
        - Classes
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /classes/{class_id}:
    put:
      summary: Class Type
      description: Update a class
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: class_id
          in: path
          required: true
          type: number
        - name: class_name
          in: body
          schema:
            type: string
      tags:
        - Classes
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: Class Type
      description: Delete a class
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: class_id
          in: path
          required: true
          type: number
      tags:
        - Classes
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  
  /users/{user_id}/profilePic:
    put:
      summary: User type
      description: Update User's profile picture
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: user_id
          in: path
          description: URI of the target user
          required: true
          type: number
          format: integer
        - name: image
          in: formData
          description: New profile picture
          required: true
          type: file
      tags: 
        - Users
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: User ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    get:
      summary: User type
      description: Returns the user profile pic
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: user_id
          in: path
          description: URI of the target user
          required: true
          type: number
          format: integer
      tags: 
        - Users
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: User ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /users/confirmation/{confirmation_hash}:
    post:
      summary: User type
      description: Confirm User's register information
      parameters: 
        - name: confirmation_hash
          in: path
          description: Hash related to a user
          required: true
          type: string
      tags: 
        - Users
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: User ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /users/{user_id}/notifications:
    post:
      summary: User type
      description: Post a notification to all of that user's device
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: user_id
          in: path
          description: User URI
          required: true
          type: number
        - name: data
          in: body
          description: JSON containing Push notification information
          required: true
          schema:
            type: string
      tags: 
        - Users
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: User ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
            
  /students/{student_id}/notifications:
    post:
      summary: Student Type
      description: Publicate push notification to all student's guardians
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          required: true
          type: number
        - name: data
          in: body
          description: JSON containing Push notification information
          required: true
          schema:
            type: string
      tags:
        - Students
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /students/{student_id}:
    get:
      summary: Student type
      description: |
        The Student resource has information about the Student's profile and references to the School and the Guardians. 
        This request will return a JSON containing information about the Student referenced by 'student_id'
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          description: URI of the target baby
          required: true
          type: number
          format: integer
      tags:
        - Students
      responses:
        200:
          description: The required Student
          schema:
            $ref: '#/definitions/student'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Student ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: Baby type
      description: |
        Delete a Student.
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          description: URI of the target student
          required: true
          type: number
          format: integer
      tags:
        - Students
      responses:
        200:
          description: Student deleted
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Student ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    put:
      summary: Student type
      description: Update Student
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          description: URI of the target student
          required: true
          type: number
          format: integer
        - name: student
          in: body
          description: Student's information
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              surname:
                type: string
              birthdate:
                type: number
              school:
                type: number
              gender:
                type: string
      tags: 
        - Students
      responses:
        200:
          description: Student updated
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Student ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /students/{student_id}/profilePic:
    put:
      summary: Student type
      description: Update Student's Profile Pic
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          description: URI of the target student
          required: true
          type: number
          format: integer
        - name: image
          in: formData
          description: New profile picture
          required: true
          type: file
      tags: 
        - Students
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: Student ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
    get:
      summary: Student type
      description: Returns the student's profile pic
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          description: URI of the target student
          required: true
          type: number
          format: integer
      tags: 
        - Students
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: User ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /students/schools/{school_id}:
    post:
      summary: Student type
      description: Create a new Student.
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
        - name: student
          in: body
          description: New Baby's Data
          required: true
          schema:
            $ref: '#/definitions/newStudent'
      tags:
        - Students
      responses:
        200:
          description: Baby created
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /students/guardians/{guardian_id}:
    get:
      summary: Classroom Type
      description: Get students for a guardian
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: guardian_id
          in: path
          required: true
          type: number
      tags:
        - Students
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/student'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /students/rooms/{room_id}:
    get:
      summary: Classroom Type
      description: Get list of students for a Classroom
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
      tags:
        - Students
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/student'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
            
  /credentials/educators:
    post:
      summary: Login
      description: Create or gets credentials for an educator
      parameters:
        - name: keys
          in: body
          description: Keys to exchange for credentials
          required: true
          schema: 
            $ref: '#/definitions/keys'
      tags:
        - Credentials
      responses:
        200:
          description: User logged in
        401:
          description: Invalid keys
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /credentials/guardians:
    post:
      summary: Login
      description: Create or gets credentials for a guardian
      parameters:
        - name: keys
          in: body
          description: Keys to exchange for credentials
          required: true
          schema: 
            $ref: '#/definitions/keys'
      tags:
        - Credentials
      responses:
        200:
          description: User logged in
        401:
          description: Invalid keys
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /credentials/{credential_id}:
    delete:
      summary: Login
      description: Logs out an User
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: credential_id
          in: path
          description: Credential id of the user logging out
          required: true
          type: integer
      tags:
        - Credentials
      responses:
        200:
          description: User logged out
        404:
          description: Id doesn't exist
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
            
  /devices/users/{user_id}:
    get:
      summary: Device Type
      description: Gets device information for that User
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: user_id
          in: path
          description: ID of the User with new Device
          required: true
          type: integer
      tags: 
        - Devices
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/device'
        404:
          description: User with ID not found
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  /devices/{device_id}:
    get:
      summary: Device Type
      description: Get information for a device 
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: device_id
          in: path
          required: true
          type: integer
      tags:
        - Devices
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/device'
        404:
          description: Device ID not found
          schema:
            $ref: '#/definitions/error'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
            
  /educators/{educator_id}:
    delete:
      summary: Educator Type
      description: Get Educator register
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: educator_id
          in: path
          required: true
          type: integer
      tags: 
        - Educators
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/educator'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    put:
      summary: Educator Type
      description: Updates an Educator register
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: educator_id
          in: path
          required: true
          type: integer
        - name: educator
          in: body
          required: true
          schema:
            type: object
            properties:
              school:
                type: number
              permissions: 
                type: number
      tags: 
        - Educators
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /educators/schools/{school_id}:
    get:
      summary: Educator Type
      description: Read all educators for that school
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: integer
      tags:
        - Educators
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/educator'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    post:
      summary: Educator Type
      description: Create new educator for that School. May send email for confirmation purposes
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: integer
        - name: educator
          in: body
          required: true
          schema:
              $ref: '#/definitions/newEducator'
      tags:
        - Educators
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/device'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /educators/rooms/{room_id}:
    get:
      summary: Classroom Type
      description: Get list of educators for a Classroom
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: room_id
          in: path
          required: true
          type: number
      tags:
        - Educators
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/educator'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
  
  /guardians/students/{student_id}:
    get:
      summary: Baby Type
      description: List of Guardians for a Student
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          required: true
          type: number
      tags:
        - Guardians
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/guardian'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /guardians/{guardian_id}:
    get:
      summary: Baby Type
      description: Get Guardian information
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: guardian_id
          in: path
          required: true
          type: integer
      tags:
        - Guardians
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/guardian'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: Baby Type
      description: Delete Guardian 
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: guardian_id
          in: path
          required: true
          type: number
      tags:
        - Guardians
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/guardian'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /guardians/{guardian_id}/students/{student_id}:
    post:
      summary: Guardian Type
      description: Create new Guardian for a student
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: guardian_id
          in: path
          required: true
          type: number
        - name: student_id
          in: path
          required: true
          type: number
      tags:
        - Guardians
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: Guardian Type
      description: Delete the relationship between a Guardian and a Student
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: guardian_id
          in: path
          required: true
          type: number
        - name: student_id
          in: path
          required: true
          type: number
      tags:
        - Guardians
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /guardians:
    post:
      summary: Guardian Type
      description: Create a new Guardian Account. May send email for confirmation purposes
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: guardian
          in: body
          required: true
          schema:
            $ref: '#/definitions/newGuardian'
      tags:
        - Guardians
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
            
  /schools/{school_id}:
    get:
      summary: School Type
      description: Get a school information
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: integer
      tags:
        - Schools
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/school'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    delete:
      summary: School Type
      description: Mark a school as inactive
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: integer
      tags:
        - Schools
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    put:
      summary: School Type
      description: Update a School information
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
        - name: school
          in: body
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
                description: Name of the school
              addr: 
                type: string
                description: Address of the school
              cnpj:
                type: string
                description: CNPJ of the school
              telephone: 
                type: number
                format: int
                description: Contact telephone of the school
              email:
                type: string
              owner:
                type: number
                description: Owner Educator URI
      tags:
        - Schools
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /schools/{school_id}/notifications/guardians:
    post:
      summary: School Type
      description: Publicate push notification to school topic for all guardians
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
        - name: data
          in: body
          description: JSON containing Push notification information
          required: true
          schema:
            type: string
      tags:
        - Schools
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /schools/{school_id}/notifications/educators:
    post:
      summary: School Type
      description: Publicate push notification to school topic for all educators
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
        - name: data
          in: body
          description: JSON containing Push notification information
          required: true
          schema:
            type: string
      tags:
        - Schools
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: URI not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /schools:
    post:
      summary: School Type
      description: Create a new school
      parameters:
        - name: school
          in: body
          required: true
          schema: 
            $ref: '#/definitions/newSchool'
      tags:
        - Schools
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /schools/{school_id}/logotype:
    put:
      summary: School Type
      description: Update the logotype of a school
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
        - name: image
          in: formData
          required: true
          type: file
      tags:
        - Schools
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    get:
      summary: School type
      description: Returns the school's logotype
      parameters: 
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: school_id
          in: path
          required: true
          type: number
      tags: 
        - Schools
      responses:
        200:
          description: Success
          schema:
            type: file
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: User ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected error
          schema:
            $ref: '#/definitions/error'
      
  /subscriptions:
    post:
      summary: Newsletter
      description: Create new subscription
      parameters:
        - name: email
          in: body
          required: true
          schema:
            type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: Success
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /subscriptions/{email}:
    delete:
      summary: Newsletter
      description: Remove a subscriber
      parameters:
        - name: email
          in: path
          required: true
          type: string
      tags:
        - Subscriptions
      responses:
        200:
          description: Success
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
            
  /timeline/students/{student_id}:
    get:
      summary: Timeline Options
      description: Return posts for that baby
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          required: true
          type: number
      tags:
        - Timeline
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/post'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    post:
      summary: Timeline Options
      description: Create a post for that baby
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: student_id
          in: path
          required: true
          type: number
        - name: message
          in: formData
          required: false
          type: string
        - name: attachment
          in: formData
          required: false
          type: file
        - name: type
          in: formData
          required: true
          type: string
        - name: poster
          in: formData
          required: true
          type: number
      tags:
        - Timeline
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /timeline/students:
    post:
      summary: Timeline Options
      description: Create a post for a list of babies
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: students
          in: formData
          required: true
          type: array
          items:
            type: number
        - name: message
          in: formData
          required: false
          type: string
        - name: attachment
          in: formData
          required: false
          type: file
        - name: type
          in: formData
          required: true
          type: string
        - name: poster
          in: formData
          required: true
          type: number
      tags:
        - Timeline
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /timeline/guardians/{guardian_id}:
    get:
      summary: Timeline Options
      description: List of posts for a Guardian's account
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: guardian_id
          in: path
          required: true
          type: number
      tags:
        - Timeline
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/post'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
  /timeline/{post_id}:
    delete:
      summary: Timeline Options
      description: Delete a post
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: post_id
          in: path
          required: true
          type: number
      tags:
        - Timeline
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'
    put:
      summary: Timeline Options
      description: Update a post
      parameters:
        - name: x-access-token
          in: header
          required: true
          type: string
        - name: post_id
          in: path
          required: true
          type: number
        - name: message
          in: formData
          required: false
          type: string
        - name: attachment
          in: formData
          required: false
          type: file
        - name: poster
          in: formData
          required: true
          type: number
        
      tags:
        - Timeline
      responses:
        200:
          description: Success
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/error'
        404:
          description: ID not found
          schema:
            $ref: '#/definitions/error'
        500:
          description: Unexpected Error
          schema:
            $ref: '#/definitions/error'

definitions:

  student:
    type: object
    required:
      - id
      - name
      - surname
      - birthdate
      - school
      - gender
    properties:
      id:
        type: number
        format: int
        description: Unique identifier for the Baby
      name:
        type: string
      surname:
        type: string
      birthdate:
        type: number
      profile_picture:
        type: string
        description: Reference for the profile pic on S3
      room:
        type: number
      guardians:
        type: array
        items:
          type: number
      school:
        type: number
      posts:
        type: array
        items:
          type: number
      gender:
        type: string
      active:
        type: boolean
        description: If not active will be deleted soon
  newStudent: 
    type: object
    required:
      - id
      - name
      - surname
      - birthdate
      - gender
    properties:
      id:
        type: number
      name:
        type: string
      surname:
        type: string
      birthdate:
        type: number
      gender:
        type: number
        
  school:
    type: object
    required:
      - id
      - name
      - telephone
      - email
    properties:
      id:
        type: number
        format: int
        description: Unique identifier for the Baby
      name:
        type: string
        description: Name of the school
      addr: 
        type: string
        description: Address of the school
      cnpj:
        type: string
        description: CNPJ of the school
      telephone: 
        type: number
        format: int
        description: Contact telephone of the school
      logotype: 
        type: string
        description: School's logotype reference on S3
      email:
        type: string
      bucket:
        type: string
      owner:
        type: number
        description: Owner Educator URI
      educators:
        type: array
        items:
          type: number
          description: Educator URI
      students:
        type: array
        items:
          type: number
          description: Students URI
      rooms:
        type: array
        items:
          type: number
          description: Rooms URI
      active:
        type: boolean
        description: If not active will be deleted soon
        
  newSchool:
    type: object
    required:
      - school
    properties:
      school:
        type: object
        required:
          - name
          - email
        properties:
          name:
            type: string
          telephone:
            type: number
          email:
            type: string
          cnpj: 
            type: string
          addr: 
            type: string
      owner:
          $ref: '#/definitions/newUser'
  user:
    type: object
    required:
      - id
      - name
      - surname
      - password
      - email
    properties:
      id:
        type: number
        format: int
      name:
        type: string
      surname:
        type: string
      password:
        type: string
        description: Hashed password
      profile_picture:
        type: string
        description: Reference for the profile pic on S3
      email:
        type: string
      cel:
        type: number
        format: int
      confirmed:
        type: boolean
      confirmationUID:
        type: string
        description: String used to confirm this user
      roles:
        type: array
        items:
          $ref: '#/definitions/role'
      devices:
        type: array
        items:
          type: number
          description: Devices URI
      active:
        type: boolean
        description: If not active will be deleted soon
        
  credential:
    description: Allows to know who is logged in and the device
    type: object
    required:
      - id
      - device
    properties:
      id:
        type: number
      device:
        type: number
        description: Device URI
      token:
        type: string
        description: The token of this credential, can be used to invalidade and distance logoff 
      active:
        type: boolean
        description: If not active will be deleted soon
  role:
    type: object
    required:
      - id
      - type
      - privileges
    properties:
      id:
        type: number
        format: int
      type:
        type: string
        description: Type of the role, may be Educator or Student
      privileges: 
        type: number
        description: Bit mask for the role permissions
      owner: 
        type: number
        description: URI of the owner user
      active:
        type: boolean
        description: If not active will be deleted soon
  guardian:
    type: object
    required:
      - id
      - role
    properties:
      id:
        type: number
        format: int
      students:
        type: array
        items:
          type: number
          description: Students URI
      role: 
        type: number
        description: Role URI
      active:
        type: boolean
        description: If not active will be deleted soon
  educator:
    type: object
    required:
      - id
      - school
      - role
    properties:
      id:
        type: number
        format: int
      school:
        type: number
        description: School URI
      rooms:
        type: array
        items:
          type: number
          description: Rooms URI
      role:
        type: number
        description: Role URI
      active:
        type: boolean
        description: If not active will be deleted soon
  newUser:
    type: object
    required:
      - name
      - surname
      - password
      - email
      - cel
    properties:
      name:
        type: string
      surname:
        type: string
      password:
        type: string
        description: Hashed password
      email:
        type: string
      cel:
        type: number
  newEducator:
    type: object
    required:
      - user
      - privileges
    properties:
      user: 
        $ref: '#/definitions/newUser'
      privileges:
        type: integer
  newGuardian:
    type: object
    required:
      - user
      - privileges
    properties:
      user: 
        $ref: '#/definitions/newUser'
      privileges:
        type: integer
  device:
    type: object
    required:
      - id
      - owner
    properties:
      id:
        type: number
        format: int
      arn:
        type: string
      description:
        type: string
      owner:
        type: number
        description: User URI
      credentials:
        type: array
        items:
          type: number
        description: Credentials related to this device
      active:
        type: boolean
        description: If not active will be deleted soon
  post:
    type: object
    required:
      - id
      - students
      - educators
    properties:
      id:
        type: number
        format: int
      attachment:
        type: string
        description: Key to S3 attachment
      message:
        type: string
      date:
        type: number
        format: int
      type:
        type: string
        format: int
        description: Type of the post, used by the client to render it
      students:
        type: array
        items:
          type: number
          description: Students URI
      educators:
        type: array
        items:
          type: number
          description: Educators URI
      school:
        type: number
        description: URI of the school
      active:
        type: boolean
        description: If not active will be deleted soon
      
  room:
    type: object
    required:
      - id
      - school
      - educators
      - students
    properties:
      id:
        type: number
        format: int
      name:
        type: string
        format: int
      students:
        type: array
        items:
          type: number
          description: Students URI
      educators:
        type: array
        items:
          type: number
          description: Educators URI
      school:
        type: number
        description: School URI
      active:
        type: boolean
        description: If not active will be deleted soon
  class:
    type: object
    required:
      - id
      - name
      - school
    properties:
      id:
        type: number
        format: int
      name:
        type: string
      school:
        type: number
        description: Owner school URI
      rooms:
        type: array
        items:
          type: number
          description: Rooms URI
      active: 
        type: boolean
        description: If not active will be deleted soon
        
  keys:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
        description: Email
      password:
        type: string
        description: Hashed password
  error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      description:
        type: string
      data:
        type: string
